<main> 

  <p style="text-align: right;">{props.title}</p>

  <!--  login component  -->
  <div id="login" class="col-md-12">

    <!--  success message  -->
    <div class="alert alert-primary alert-dismissible fade show successAlert" role="alert" id="successAlert">
      <strong>Success</strong>
      <button type="button" class="close closeAlert" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>

    <!--  fail message  -->
    <div class="alert alert-danger alert-dismissible fade show failAlert"role="alert" id="failAlert">
      <strong>{ state.error }</strong>
      <button type="button" class="close closeAlert" data-dismiss="alert" aria-label="Close" >
        <span aria-hidden="true">&times;</span>
      </button>
    </div>

    <div class="col-md-3 mx-auto py-3">
      <h3>Login</h3>
      <input type="text" name="email" class="form-control" placeholder="Email" style="margin: 10px 0;">
      <input type="password" name="password" class="form-control" placeholder="Password">
      <br />
      <button type="submit" onclick={doLogin} class="btn btn-primary">Login</button>
      <button type="reset" id="resetInputLogin" class="btn btn-warning ml-1">Clear</button>
      <span class="ml-3 text-primary" style="cursor: pointer;" onclick={openRegisterModal}>Create an account</span>
    </div>
  </div>
  <!--  eof login component  -->

  <!--  main container  -->
  <div id="main" class="col-md-11 mx-auto">
  
    <!--  success message  -->
    <div class="alert alert-primary alert-dismissible fade show successAlert" role="alert" id="successAction">
      <strong>Action Sukses</strong>
      <button type="button" class="close closeAlert" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>

    <!--  fail message  -->
    <div class="alert alert-danger alert-dismissible fade show failAlert" role="alert" id="failAction">
      <strong>{ state.error }</strong>
      <button type="button" class="close closeAlert" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>

    <h3 if={state.logined}>
      Welcome, {state.userName} 
      <span class="ml-3 text-danger" style="cursor: pointer;" onclick={doLogout}> > Logout</span>
    </h3>
    <table id="example" class="table table-striped table-striped"><table>
    <div>
      <button class="btn btn-secondary" onclick={openCreateModal}>Create New Task</button>
      <div class="text-danger font-italic ml-3 mt-1">
        <p>* Untuk dapat menggunakan fitur edit & delete anda harus login.</p>
        <p>* User hanya dapat edit / delete data miliknya sendiri</p>
      </div>
    </div>

  </div>
  <!--  #eof main container  -->

  <!--  Edit Modal  -->
  <div id="myModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Edit Task</h5>
          <button type="button" class="close closeModal" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="col-md-12">
            <input type="hidden" name="_id" id="modal_task_id" value="">          
            <span>Enter Task Name</span>
            <input type="text" class="form-control" name="task_name" id="modal_task_name" value="menulis code sambil ngopi" placeholder="enter task name" style="width: 100%;">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" id="saveTask" class="btn btn-primary">Save changes</button>
          <button type="button" class="btn btn-secondary closeModal" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!--  Register Modal  -->
  <div id="registerModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Register User</h5>
          <button type="button" class="close closeModal" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="col-md-12">
            <span>Enter Name</span>
            <input type="text" class="form-control" name="register_name" value="" placeholder="Enter user name" style="width: 100%;">
            <span>Enter Email</span>
            <input type="email" class="form-control" name="register_email" value="" placeholder="Enter email" style="width: 100%;">
            <span>Enter Password</span>
            <input type="password" class="form-control" name="register_password" value="" placeholder="Enter password" style="width: 100%;">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" onclick={doRegister}>Register</button>
          <button type="button" class="btn btn-secondary closeModal" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!--  Delete Modal  -->
  <div id="removeTaskModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Delete Task</h5>
          <button type="button" class="close closeModal" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="col-md-12">
            <input type="hidden" name="_id" id="modal_task_id" value="">
            <p>Apakah anda yakin akan menghapus data ini ?</p>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" id="doDelete" class="btn btn-danger">Delete</button>
          <button type="button" class="btn btn-secondary closeModal" data-dismiss="modal">Cancel</button>
        </div>
      </div>
    </div>
  </div>

  <script>

    import axios from 'axios'
    const URL = 'http://localhost:3333'
    const taskSegment = 'api/tasks'
    const authSegment = 'api/auth'

    export default {

      async onMounted() {

        if (this.getCookie('logined')) {
          this.update({
            logined: this.getCookie('logined'),
            userName: this.getCookie('userName')
          })
        }

        const self = this

        let table = $('#example').DataTable({
          data: await this.getData(),
          columns: [
            { title: "Nomor", data: null },
            { title: "Task", data: "task_name" },
            // { title: "Dibuat oleh", data: "createdBy" },
            // { title: "Dibuat pada", data: "created_at" },
            {
              title: "Action",
              data: null,
              className: "center",
              defaultContent: '<a href="" class="editor_edit">Edit</a> / <a href="" class="editor_remove">Delete</a>'
            }
          ]
        });

        // Number
        table.on( 'order.dt search.dt', function () {
          table.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
            cell.innerHTML = i+1;
          } );
        } ).draw();

        // Edit event listener
        $('#example').on('click', 'a.editor_edit', function (e) {

          e.preventDefault()
          
          const rowSelector =  $(this).closest('tr')
          const _id = table.row(rowSelector).data()._id
          const taskName = table.row(rowSelector).data().task_name

          $('#myModal').show()
          $('#modal_task_name').val(taskName)
          $('#modal_task_id').val(_id)

        });

        // on edit save handler
        $('#saveTask').click(async function() {
          
          try {

            const theURL = `${URL}/${taskSegment}/${$('#modal_task_id').val()}`

            if ($('#modal_task_id').val()) {
              
              // edit mode
              await axios.put(theURL, { task_name: $('#modal_task_name').val() }, {
                headers: {
                  "Authorization" : `Bearer ${self.getCookie('token')}`
                }
              })
            } else {

              // create mode
              await axios.post(`${URL}/${taskSegment}`, { task_name: $('#modal_task_name').val() }, {
                headers: {
                  "Authorization" : `Bearer ${self.getCookie('token')}`
                }
              })
            }

            $('#successAction').show()
            $('#myModal').hide()

            location.reload()
            
          } catch (error) {

            //console.log('error ', error)
            self.state.error = error.message
            self.update()
            $('#failAction').show()
            $('#myModal').hide()
          
          }

        });

        // Delete event listener
        $('#example').on('click', 'a.editor_remove', function (e) {

          e.preventDefault()
          
          const rowSelector =  $(this).closest('tr')
          const _id = table.row(rowSelector).data()._id

          $('#removeTaskModal').show()
          $('#modal_task_id').val(_id)

        });

        // on Delete handler
        $('#doDelete').click(async function() {
          
          try {
            
            const theURL = `${URL}/${taskSegment}/${$('#modal_task_id').val()}`

            await axios.delete(theURL, {
              headers: {
                "Authorization" : `Bearer ${self.getCookie('token')}`
              }
            })

            $('#successAction').show()
            $('#removeTaskModal').hide()

            location.reload()

          } catch (error) {

            // console.log('error ', error)
            self.state.error = error.message
            self.update()
            $('#failAction').show()
            $('#removeTaskModal').hide()
          
          }

        });

        // Behaviour in general

        // Close modal
        $(".closeModal").click(function() {
          $('#myModal').hide()
          $('#removeTaskModal').hide()
          $('#registerModal').hide()
        });

        $(".closeAlert").click(function() {
          $('.alert').hide()
        });

        // Reset input login 
        $('#resetInputLogin').click(function(){
          $("input[name='email']").val('')
          $("input[name='password']").val('')
        })

        // Default
        $('.successAlert').hide()
        $('.failAlert').hide()

      },
      components: {},
      state: {
        logined: false,
        userName: '',
        error: ''
      },
      getData () {
        const theURL = `${URL}/${taskSegment}`
        return axios.get(theURL)
          .then(response => response.data.data)
      },
      async doLogin () {

        const email = $("input[name='email']").val()
        const password = $("input[name='password']").val()
        
        try {
          const theURL = `${URL}/${authSegment}/login`
          let login = await axios.post(theURL, {
            email: email,
            password: password
          })

          this.setCookie('logined', true)
          this.setCookie('token', login.data.data.token)
          this.setCookie('userId', login.data.data.user._id)
          this.setCookie('userName', login.data.data.user.name)
          this.setCookie('userEmail', login.data.data.user.email)

          this.update({
            logined: this.getCookie('logined'),
            userName: this.getCookie('userName')
          })

          console.log('getCookie ', this.getCookie('token'))

          $('#successAlert').show()
       
        } catch (error) {
          this.state.error = error.message
          this.update()
          $("#failAlert").show()
        }
      },
      openCreateModal () {
        $('#myModal').show()
      },
      openRegisterModal () {
        $('#registerModal').show()
      },
      async doRegister (e) {

        e.preventDefault()
        
        try {

          const theURL = `${URL}/${authSegment}/register`
          const params = { 
            name: $(":input[name='register_name']").val(),
            email: $(":input[name='register_email']").val(),
            password: $(":input[name='register_password']").val()
          }

          await axios.post(theURL, params)

          $('#successAction').show()
          $('#registerModal').hide()
          
        } catch (error) {

          //console.log('error ', error)
          this.state.error = error.message
          this.update()
          $('#failAction').show()
          $('#registerModal').hide()
        
        }
      },
      setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays*24*60*60*1000));
        var expires = "expires="+ d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
      },
      getCookie(cname) {
        var name = cname + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(';');
        for(var i = 0; i <ca.length; i++) {
          var c = ca[i];
          while (c.charAt(0) == ' ') {
            c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
          }
        }
        return "";
      },
      doLogout () {

        this.update({
          logined: false,
          userName: ''
        })

        this.setCookie('logined', false)
        this.setCookie('token', '')
        this.setCookie('userId', '')
        this.setCookie('userName', '')
        this.setCookie('userEmail', '')

        $('#successAlert').show()
      }
    }
  </script>
</main>